<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd     
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd">

	<!-- 使用无参构造器创建对象
		id属性：bean的名称 要求唯一
		class属性：类的全限定名 -->
	<bean id="stu1" class="first.Student"></bean>
	<bean id="date1" class="java.util.Date"/>
	
	
	<!-- 使用静态工厂方法创建对象
		factory-method属性：指定一个静态方法
		spring容器会调用这个静态方法来创建对象 factory-method -->
	<bean id="cal1" class="java.util.Calendar" 
		factory-method="getInstance"/>
	
	<!-- 使用实例工厂方法创建对象
		factory-bean属性：指定一个bean的id
		factory-method属性：指定一个方法
		spring容器会调用bean的对应的方法来创建对象 -->
	<bean id="date2" factory-bean="cal1"
		factory-method="getTime"/>
	
	<!-- scope属性：用来配置作用域，缺省值是singleton
		prototype（一个bean可创建多个实例） -->
	<bean id="stu2"	class = "first.Student" scope="prototype"/>
	
	<!-- init-method属性：指定初始化方法 
		destroy-method属性：指定销毁方法 关闭容器之前会先销毁对象
		lazy-init:true延迟加载-->
	<bean id="cstu1" class="first.CopyOfStudent"
		init-method="init" destroy-method="destory"
		lazy-init="true"/>
</beans>








